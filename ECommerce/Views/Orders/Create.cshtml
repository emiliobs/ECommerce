@model ECommerce.Models.NewOrderView

@{
    ViewBag.Title = "Create";
}

<h2>New Order</h2>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Order</h4>
        <hr />
        <div class="container">
            <div class="row">
                <div class="col-lg-6">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.CustomerId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("CustomerId", null, "[Select a  Customer]", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.StateId, "StateId", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("StateId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save Oreder" class="btn btn-success" />
                            @Html.ActionLink("Add Product", "AddProduct", new { }, new { @class = "btn btn-warning" })
                            @Html.ActionLink("Back to Orders", "Index", new { }, new { @class = "btn btn-default" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>



}

<h4>Details.</h4>
<hr />
@if (Model.Details.Count == 0)
{
    <h5>Not Details added yet.</h5>
}
else
{
    <table class="table">
        <tr>           
            <th>
                @Html.DisplayNameFor(model => model.Details[0].Product.Image)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Details[0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Details[0].TaxRate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Details[0].Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Details[0].Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Details[0].Value)
            </th>
                        
            <th></th>
        </tr>

        @foreach (var item in Model.Details)
        {
            <tr>
                <td>
                    
                    @if (!string.IsNullOrEmpty(item.Product.Image))
                    {
                        @*<img src="@Url.Content(item.Image)" alt="Image" style="width:100px; height:100px; max-width:100%; height:auto;" />*@
                        <img src="@Url.Content(item.Product.Image)" alt="Image" style="width:100px;height:100px;max-width: 100%; height: auto;" />
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td align="justify">
                    @Html.DisplayFor(modelItem => item.TaxRate)
                </td>
                <td align="justify">
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td align="justify">
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td align="justify">
                    @Html.DisplayFor(modelItem => item.Value)
                </td>              
               
                <td>
                  
                    @Html.ActionLink("Delete", "DeleteProduct", new { id = item.ProductId },new { @class = "btn btn-danger",
                                                                onclick ="return confirm('Are you sure to delete this record?')"})
                </td>
            </tr>
        }
        
        <tr>
            <td colspan="8">
                <hr />
            </td>
        </tr>
        <tr>
            
            <td colspan="4" align="char" style="color:orangered; font-size:large;">
                
                 <strong>Total:</strong>
            </td>
            <td>
                <strong>@Html.DisplayFor(modelItem=>Model.TotalQuantity)</strong>
            </td>
            <td>
                <strong>@Html.DisplayFor(modeItem=>Model.TotalValue)</strong>
            </td>
        </tr>
    </table>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
